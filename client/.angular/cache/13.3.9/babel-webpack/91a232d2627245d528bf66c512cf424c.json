{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { Subject, of } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CommunicationService = /*#__PURE__*/(() => {\n  class CommunicationService {\n    constructor(http) {\n      this.http = http;\n      this.BASE_URL = \"http://localhost:3000/database/\";\n      this._listeners = new Subject();\n    }\n\n    listen() {\n      return this._listeners.asObservable();\n    }\n\n    filter(filterBy) {\n      this._listeners.next(filterBy);\n    }\n\n    getMedecins() {\n      return this.http.get(`${this.BASE_URL}`).pipe(catchError(this.handleError('getMedecins', [])));\n    }\n\n    createMedecin(medecin) {\n      return this.http.post(`${this.BASE_URL}`, medecin).pipe(catchError(this.handleError('createMedecin')));\n    }\n\n    deleteMedecin(id) {\n      return this.http.delete(`${this.BASE_URL}/${id}`).pipe(catchError(this.handleError('deleteMedecin')));\n    }\n\n    updateMedecin(id, updatedMedecin) {\n      return this.http.put(`${this.BASE_URL}/${id}`, updatedMedecin).pipe(catchError(this.handleError('updateMedecin')));\n    }\n\n    handleError(operation = 'operation', result) {\n      return error => {\n        console.error(`${operation} failed: ${error.message}`);\n        return of(result);\n      };\n    }\n\n  }\n\n  CommunicationService.ɵfac = function CommunicationService_Factory(t) {\n    return new (t || CommunicationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CommunicationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommunicationService,\n    factory: CommunicationService.ɵfac,\n    providedIn: 'root'\n  });\n  return CommunicationService;\n})();","map":null,"metadata":{},"sourceType":"module"}